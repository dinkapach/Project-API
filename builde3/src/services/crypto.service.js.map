{"version":3,"sources":["../../../src/services/crypto.service.js"],"names":["encrypt","dataToEncrypt","Promise","resolve","reject","genSalt","err","salt","hash","isMatch","toMatch","originData","compare","res"],"mappings":";;;;;;AAAA;;;;;;kBAEe;AAEXA,WAFW,mBAEHC,aAFG,EAEY;AACnB,eAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,+BAAOC,OAAP,CAAe,EAAf,EAAmB,UAACC,GAAD,EAAMC,IAAN,EAAe;AAC9B,oBAAID,GAAJ,EAASF,OAAOE,GAAP;;AAET,mCAAOE,IAAP,CAAYP,aAAZ,EAA2BM,IAA3B,EAAiC,UAACD,GAAD,EAAME,IAAN,EAAe;AAC5C,wBAAIF,GAAJ,EAASF,OAAOE,GAAP;;AAETH,4BAAQK,IAAR;AACH,iBAJD;AAKH,aARD;AASH,SAVM,CAAP;AAWH,KAdU;AAgBXC,WAhBW,mBAgBHC,OAhBG,EAgBMC,UAhBN,EAgBkB;AACzB,eAAO,IAAIT,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,+BAAOQ,OAAP,CAAeF,OAAf,EAAwBC,UAAxB,EAAoC,UAACL,GAAD,EAAMO,GAAN,EAAc;AAC9C,oBAAIP,GAAJ,EAASF,OAAOE,GAAP;;AAETH,wBAAQU,GAAR;AACH,aAJD;AAKH,SANM,CAAP;AAOH;AAxBU,C","file":"crypto.service.js","sourcesContent":["import bcrypt from 'bcryptjs';\r\n\r\nexport default {\r\n\r\n    encrypt(dataToEncrypt) {\r\n        return new Promise((resolve, reject) => {\r\n            bcrypt.genSalt(10, (err, salt) => {\r\n                if (err) reject(err);\r\n\r\n                bcrypt.hash(dataToEncrypt, salt, (err, hash) => {\r\n                    if (err) reject(err);\r\n\r\n                    resolve(hash);                    \r\n                });\r\n            });\r\n        });\r\n    },\r\n\r\n    isMatch(toMatch, originData) {\r\n        return new Promise((resolve, reject) => {\r\n            bcrypt.compare(toMatch, originData, (err, res) => {\r\n                if (err) reject(err);\r\n\r\n                resolve(res);\r\n            });\r\n        });\r\n    }\r\n\r\n}"]}