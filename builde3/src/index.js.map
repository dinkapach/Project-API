{"version":3,"sources":["../../src/index.js"],"names":["connect","config","autoIndex"],"mappings":";;AAAA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;;;AAEA,mBAASA,OAAT,CAAiB,mCAAjB,EAAsD,EAAEC,QAAQ,EAAEC,WAAW,KAAb,EAAV,EAAtD;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;;AAGA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAIA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;;AAGA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;;AAGA;;AAEA;AACA;;AAEA;;AAEA;;;AAGA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;AAGA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;;AAGA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;;AAGA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA","file":"index.js","sourcesContent":["import readlineSync from 'readline-sync';\r\nimport mongoose from 'mongoose';\r\n\r\nimport Customer from './models/user-model';\r\nimport Club from './models/club-model';\r\nimport UserClub from './models/user-club-model';\r\nimport Manager from './models/manager-model';\r\nimport Sale from './models/sale-model';\r\nimport Credit from './models/credit-model';\r\nimport Receipt from './models/receipt-model';\r\n\r\nimport dateTimeFunctions from './helpers/datetime.functions';\r\n\r\nimport CustomerRepository from './database/repositories/customer.repository';\r\nimport ClubRepository from './database/repositories/club.repository';\r\nimport UserClubRepository from './database/repositories/userClub.repository';\r\nimport ManagerRepository from './database/repositories/manager.repository';\r\n\r\nimport Crypto from './services/crypto.service';\r\n\r\nmongoose.connect('mongodb://localhost:27017/project', { config: { autoIndex: false } });\r\n//mongoose.connect('mongodb://localhost:27017/project/clubs', { config: { autoIndex: false } });\r\n//mongoose.connect('mongodb://localhost:27017/project/userclubs', { config: { autoIndex: false } });\r\n\r\n/////////////////////////////SIGN UP/////////////////////////////////////////\r\n\r\n// const id = readlineSync.question('Please enter your ID Number: ');\r\n// const firstName = readlineSync.question('Please enter your first name: ');\r\n// const lastName = readlineSync.question('Please enter your last name: ');\r\n// const password = readlineSync.question('Please enter your password: ');\r\n// const address = readlineSync.question('Please enter your address: ');\r\n// const email = readlineSync.question('Please enter your email: ');\r\n// const phone = readlineSync.question('Please enter your phone number: ');\r\n// const birthDay = readlineSync.question('Please enter your birthday date (dd/MM/yyyy): ');\r\n\r\n// const customer = new Customer({\r\n//     Id: id,\r\n//     UserName: email,\r\n//     FirstName: firstName,\r\n//     LastName: lastName,\r\n//     Password: password,\r\n//     Address: address,\r\n//     Email: email,\r\n//     Age: dateTimeFunctions.calculateAge(birthDay),\r\n//     PhoneNumber: phone,\r\n//     Img : \"\",\r\n//     BirthDay: birthDay,\r\n//     Clubs: [],\r\n//     Credits: [],\r\n//     Receipts: []\r\n// });\r\n\r\n// CustomerRepository.addCustomer(customer);\r\n\r\n/////////////////////////////////// END SIGNUP /////////////////////////////////////////\r\n\r\n//////////////////////////////// LOGIN //////////////////////////////////////////////\r\n\r\n// const email = readlineSync.question('Please enter your email: ');\r\n// const password = readlineSync.question('Please enter your password: ');\r\n\r\n// CustomerRepository.findCustomerByEmail(email)\r\n// .then(customer => {\r\n//     Crypto.isMatch(password, customer.Password)\r\n//     .then(match => {\r\n//         if(match) {\r\n//             console.log(\"customer logged in\");\r\n//         } \r\n//         else {\r\n//             console.log(\"wrong password\");\r\n//         }\r\n//     })\r\n//     .catch(err => {\r\n//         console.log(err);\r\n//     })\r\n// })\r\n\r\n// .catch(err => {\r\n//     console.log(\"customer wasnt found\");\r\n// });\r\n\r\n\r\n////////////////////////////////////// END LOGIN ///////////////////////////////////////////\r\n\r\n\r\n////////////////////////////////// ADD CLUB BY USER /////////////////////////////////////////\r\n\r\n// // // TODO : search clubs by name, present them and then use can choose the right one\r\n// const userId = readlineSync.question('Please enter your id: ');\r\n// const clubId = readlineSync.question('Please enter club id to add: ');\r\n\r\n\r\n// // TODO: do we need to it in trans??\r\n// // need to add this club to manager, need the club to be refernce??\r\n// CustomerRepository.findCustomerById(userId)\r\n// .then(customer => {\r\n//     if(customer){\r\n//         ClubRepository.findClubById(clubId)\r\n//         .then(club => {\r\n//             if(club)\r\n//             {\r\n//                 const userClub = new UserClub({\r\n//                     CustomerId: customer._id,\r\n//                     Points: 0\r\n//                 });\r\n//                 UserClubRepository.addUserClub(userClub);\r\n//                 club.UsersClub.push(userClub);\r\n//                 club.save();\r\n//                 customer.Clubs.push(club._id);\r\n//                 customer.save();\r\n//             }\r\n//             else { console.log(\"cant find club\");  }\r\n//         })\r\n//         .catch(err => {\r\n//             console.log(err);\r\n//         })\r\n//     }\r\n//     else  {  console.log(\"cant find customer\"); }\r\n// })\r\n// .catch(err => {\r\n//     console.log(err);\r\n// });\r\n\r\n///////////////////////////////// END ADD CLUB BY USER //////////////////////////////////////////\r\n\r\n///////////////////////////////// REMOVE CLUB BY USER ///////////////////////////////////////////\r\n\r\n// const userId = readlineSync.question('Please enter your id: ');\r\n// const clubId = readlineSync.question('Please enter club id to remove: ');\r\n\r\n// CustomerRepository.findCustomerById(userId)\r\n// .then(customer => {\r\n//     ClubRepository.findClubById(clubId)\r\n//     .then(club => {\r\n//         CustomerRepository.removeClubById(customer, club._id);\r\n//         ClubRepository.removeCustomerById(club, customer._id);\r\n//     })\r\n//     .catch(err => {\r\n//         console.log(err);\r\n//     })\r\n// })\r\n// .catch(err => {\r\n//     console.log(err);\r\n// });\r\n\r\n///////////////////////////////// END REMOVE CLUB BY USER //////////////////////////////////////\r\n\r\n\r\n//////////////////////////////////// SHOW CLUBS /////////////////////////////////////////////////\r\n\r\n// const id = readlineSync.question('Please enter yuor ID Number: ');\r\n\r\n// CustomerRepository.findCustomerById(id)\r\n// .then(customer => {\r\n// customer.Clubs.forEach(function(clubId) {\r\n//         ClubRepository.findClubByObjectId(clubId)\r\n//         .then(club => {\r\n//             console.log(club.Name);\r\n//         })\r\n//         .catch(err => {\r\n//             console.log(err);\r\n//         })\r\n//     }, this);\r\n// })\r\n// .catch(err => {\r\n//     console.log(err);\r\n// });\r\n\r\n/////////////////////////////////// END SHOW CLUBS //////////////////////////////////////////////\r\n\r\n\r\n//////////////////////////////// SHOW CUSTOMERS FOR MANAGER ////////////////////////////////////\r\n\r\n// const clubId = readlineSync.question('Please enter club id: ');\r\n\r\n// ClubRepository.findClubById(clubId)\r\n// .then(club => {\r\n//     club.UsersClub.forEach(function(userClub) {\r\n//         CustomerRepository.findCustomerByObjectId(userClub.CustomerId)\r\n//         .then(customer => {\r\n//             console.log(customer.FirstName);\r\n//         })\r\n//         .catch(err => {\r\n//             console.log(err);\r\n//         })      \r\n//     }, this);\r\n// })\r\n// .catch(err => {\r\n//     console.log(err);\r\n// });\r\n\r\n/////////////////////////////// END SHOW CUSTOMERS FOR MANAGER ////////////////////////////////\r\n\r\n\r\n\r\n///////////////////////////////////// ADD CLUBS BY MANAGER /////////////////////////////////////\r\n\r\n// const ManagerId = readlineSync.question('Please enter manager ID Number: ');\r\n// const id = readlineSync.question('Please enter club ID Number: ');\r\n\r\n// ClubRepository.findClubById(id)\r\n// .then(club => {\r\n//     if(!club)\r\n//     {\r\n//         const name = readlineSync.question('Please enter club name: ');\r\n//         const address = readlineSync.question('Please enter club address: ');\r\n//         const phone = readlineSync.question('Please enter club phone number: ');\r\n//         const openHours = readlineSync.question('Please enter from hour: ');\r\n//         const closeHours = readlineSync.question('Please enter till hour: ');\r\n\r\n//         const club = new Club({\r\n//             Id: id,\r\n//             Name: name,\r\n//             Address: address,\r\n//             PhoneNumber: phone,\r\n//             Img : \"\",\r\n//             OpeningHours: [dateTimeFunctions.calculateOpeningHours(openHours), dateTimeFunctions.calculateOpeningHours(closeHours)],\r\n//             UsersClub: [],\r\n//             Sales: [], \r\n//             Branches:[] \r\n//         });\r\n\r\n//         ClubRepository.addClub(club);\r\n//         ManagerRepository.findManagerById(ManagerId)\r\n//         .then(manager => {\r\n//             ManagerRepository.addClub(manager, club._id);\r\n//         })\r\n//         .catch(err => {\r\n//             console.log(err);\r\n//         })\r\n//     }\r\n//     else\r\n//     {\r\n//         ManagerRepository.findManagerById(ManagerId)\r\n//         .then(manager => {\r\n//             ManagerRepository.addClub(manager, club._id);\r\n//         })\r\n//         .catch(err => {\r\n//             console.log(err);\r\n//         })\r\n//     }\r\n// })\r\n// .catch(err => {\r\n//     console.log(err);\r\n// });\r\n\r\n///////////////////////////////////// END ADD CLUBS BY MANAGER /////////////////////////////////\r\n\r\n\r\n///////////////////////////// MANAGER SIGN UP/////////////////////////////////////////\r\n\r\n// const id = readlineSync.question('Please enter your ID Number: ');\r\n// const firstName = readlineSync.question('Please enter your first name: ');\r\n// const lastName = readlineSync.question('Please enter your last name: ');\r\n// const password = readlineSync.question('Please enter your password: ');\r\n// const email = readlineSync.question('Please enter your email: ');\r\n\r\n// const manager = new Manager({\r\n//     Id: id,\r\n//     UserName: email,\r\n//     FirstName: firstName,\r\n//     LastName: lastName,\r\n//     Password: password,\r\n//     Email: email,\r\n//     Clubs: [],\r\n// });\r\n\r\n// ManagerRepository.addManager(manager);\r\n\r\n///////////////////////////////////END MANAGER SIGNUP//////////////////////////////////////////\r\n\r\n////////////////////////////////// REMOVE CLUB BY MANAGER ////////////////////////////////////\r\n\r\n// const managerId = readlineSync.question('Please enter your id: ');\r\n// const clubId = readlineSync.question('Please enter club id to remove: ');\r\n\r\n// ManagerRepository.findManagerById(managerId)\r\n// .then(manager => {\r\n//     ClubRepository.findClubById(clubId)\r\n//     .then(club => {\r\n//         ManagerRepository.removeClubById(manager, club._id);\r\n//         //club.remove();  // do we need to delete the club from db?\r\n//     })\r\n//     .catch(err => {\r\n//         console.log(err);\r\n//     })\r\n// })\r\n// .catch(err => {\r\n//     console.log(err);\r\n// });\r\n\r\n///////////////////////////////// END REMOVE CLUB BY MANAGER ////////////////////////////////\r\n\r\n\r\n//////////////////////////////// MANAGER ADD POINTS TO CUSTOMER ////////////////////////////\r\n\r\n// const clubId = readlineSync.question('Please enter club id: ');\r\n// const customerId = readlineSync.question('Please enter customer id: ');\r\n// const points = readlineSync.question('Please enter points number to add: ');\r\n\r\n//     CustomerRepository.findCustomerById(customerId)\r\n//     .then(customer => {\r\n//          ClubRepository.findClubById(clubId)\r\n//         .then(club => {\r\n//             ClubRepository.addPointsToClub(club, customer._id, points);\r\n//         })\r\n//         .catch(err => { console.log(err); });\r\n//     })\r\n//     .catch (err => { console.log(err); });\r\n\r\n/////////////////////////////// END MANAGER ADD POINTS TO CUSTOMER ////////////////////////\r\n\r\n\r\n////////////////////////////// MANAGER REMOVE POOINTS ////////////////////////////////////\r\n\r\n\r\n// const clubId = readlineSync.question('Please enter club id: ');\r\n// const customerId = readlineSync.question('Please enter customer id: ');\r\n// const points = readlineSync.question('Please enter points number to remove: ');\r\n\r\n//     CustomerRepository.findCustomerById(customerId)\r\n//     .then(customer => {\r\n//          ClubRepository.findClubById(clubId)\r\n//         .then(club => {\r\n//             ClubRepository.RemovePointsFromClub(club, customer._id, points);\r\n//         })\r\n//         .catch(err => { console.log(err); });\r\n//     })\r\n//     .catch (err => { console.log(err); });\r\n\r\n///////////////////////////// END MANAGER REMOVE POINTS /////////////////////////////////\r\n\r\n\r\n////////////////////////////// MANAGER ADD SALES /////////////////////////////////////////\r\n\r\n// const clubId = readlineSync.question('Please enter club id: ');\r\n// const description = readlineSync.question('Please enter description: ');\r\n// const points = readlineSync.question('Please enter points number to add: ');\r\n// const price = readlineSync.question('Please enter price: ');\r\n// const saleId = readlineSync.question('Please enter sale id: ');\r\n// const saleName = readlineSync.question('Please enter sale name: ');\r\n\r\n// const sale = new Sale({\r\n//     Id: saleId,\r\n//     Name: saleName,\r\n//     Img: \"\",\r\n//     Description: description,\r\n//     Points: points,\r\n//     Price: price\r\n// });\r\n\r\n// ClubRepository.findClubById(clubId)\r\n// .then(club => {\r\n//     ClubRepository.addSale(club, sale);\r\n// })\r\n// .catch(err => { console.log(err); });\r\n\r\n\r\n///////////////////////////// END MANAGER ADD SALES /////////////////////////////////////\r\n\r\n\r\n//////////////////////////// MANAGER REMOVE SALE ///////////////////////////////////////\r\n\r\n// const clubId = readlineSync.question('Please enter club id: ');\r\n// const saleId = readlineSync.question('Please enter sale id: ');\r\n\r\n// ClubRepository.findClubById(clubId)\r\n// .then(club => {\r\n//        ClubRepository.removeSale(club, saleId);\r\n// })\r\n// .catch(err => { console.log(err); });\r\n\r\n\r\n/////////////////////////// END MANAGER REMOVE SALE ///////////////////////////////////\r\n\r\n\r\n/////////////////////////// USER CHANGE ID ///////////////////////////////////////////\r\n\r\n// const oldId = readlineSync.question('Please enter old id: ');\r\n// const newId = readlineSync.question('Please enter new id: ');\r\n\r\n// CustomerRepository.changePrivateInfo(oldId, 'Id', newId);\r\n\r\n////////////////////////// END USER CHANGE ID ///////////////////////////////////////\r\n\r\n/////////////////////////// USER CHANGE NAME ////////////////////////////////////////\r\n\r\n// const customerId = readlineSync.question('Please enter id: ');\r\n// const newName = readlineSync.question('Please enter new name: ');\r\n\r\n// CustomerRepository.changePrivateInfo(customerId, 'FirstName', newName);\r\n\r\n////////////////////////// END USER CHANGE NAME /////////////////////////////////////\r\n\r\n/////////////////////////// USER CHANGE LAST NAME ///////////////////////////////////////////\r\n\r\n// const customerId = readlineSync.question('Please enter id: ');\r\n// const newLastName = readlineSync.question('Please enter new last name: ');\r\n\r\n// CustomerRepository.changePrivateInfo(customerId, 'LastName', newLastName);\r\n\r\n////////////////////////// END USER CHANGE LAST NAME ///////////////////////////////////////\r\n\r\n/////////////////////////// USER CHANGE ADDRESS ///////////////////////////////////////////\r\n\r\n// const customerId = readlineSync.question('Please enter id: ');\r\n// const newAddress = readlineSync.question('Please enter new address: ');\r\n\r\n// CustomerRepository.changePrivateInfo(customerId, 'Address', newAddress);\r\n\r\n////////////////////////// END USER CHANGE ADDRESS ////////////////////////////////////////\r\n\r\n\r\n/////////////////////////// USER CHANGE PHONE NUMBER //////////////////////////////////////\r\n\r\n// const customerId = readlineSync.question('Please enter id: ');\r\n// const newPhoneNumber = readlineSync.question('Please enter new phone number: ');\r\n\r\n// CustomerRepository.changePrivateInfo(customerId, 'PhoneNumber', newPhoneNumber);\r\n\r\n////////////////////////// END USER CHANGE PHONE NUMBER ///////////////////////////////////\r\n\r\n\r\n/////////////////////////// USER CHANGE EMAIL /////////////////////////////////////////////\r\n\r\n// const customerId = readlineSync.question('Please enter id: ');\r\n// const newEmail = readlineSync.question('Please enter new email: ');\r\n\r\n// CustomerRepository.findCustomerById(customerId)\r\n// .then(customer => {\r\n//     if(customer)\r\n//     {\r\n//         customer.Email = newEmail;\r\n//         customer.UserName = newEmail;\r\n//         customer.save();\r\n//     }\r\n//     else\r\n//     {\r\n//         console.log(\"Customer not found\");\r\n//     }\r\n    \r\n// })\r\n// .catch(err => { console.log(err); });\r\n\r\n////////////////////////// END USER CHANGE EMAIL ////////////////////////////////////////\r\n\r\n/////////////////////////// USER CHANGE BIRTHDAY //////////////////////////////////////////\r\n\r\n// const customerId = readlineSync.question('Please enter id: ');\r\n// const newBirthDay = readlineSync.question('Please enter new birthday date (dd/MM/yyyy): ');\r\n\r\n// CustomerRepository.findCustomerById(customerId)\r\n// .then(customer => {\r\n//     if(customer)\r\n//     {\r\n//        customer.Age = dateTimeFunctions.calculateAge(newBirthDay);\r\n//        customer.BirthDay = newBirthDay;\r\n//        customer.save();\r\n//     }\r\n//     else\r\n//     {\r\n//         console.log(\"Customer not found\");\r\n//     }\r\n    \r\n// })\r\n// .catch(err => { console.log(err); });\r\n\r\n////////////////////////// END USER CHANGE BIRTHDAY /////////////////////////////////////\r\n\r\n\r\n/////////////////////////// USER CHANGE PASSWORD ////////////////////////////////////////\r\n\r\n// const customerId = readlineSync.question('Please enter id: ');\r\n// const oldPassword = readlineSync.question('Please enter old password: ');\r\n// const newPassword = readlineSync.question('Please enter new password: ');\r\n\r\n// CustomerRepository.findCustomerById(customerId)\r\n// .then(customer => {\r\n//     if(customer)\r\n//     {\r\n//         Crypto.isMatch(oldPassword, customer.Password)\r\n//         .then(match => {\r\n//             if(match) \r\n//             {\r\n//                 customer.Password = newPassword;\r\n//                 customer.save();\r\n//             }\r\n//             else { console.log(\"wrong password\"); }\r\n//         });\r\n//     }\r\n//     else { console.log(\"Customer not found\"); }\r\n    \r\n// })\r\n// .catch(err => { console.log(err); });\r\n\r\n////////////////////////// END USER CHANGE PASSWORD ///////////////////////////////////\r\n\r\n\r\n///////////////////////// CLUB CHANGE NAME /////////////////////////////////////////// \r\n\r\n// const clubId = readlineSync.question('Please enter id: ');\r\n// const newName = readlineSync.question('Please enter new name: ');\r\n\r\n// CustomerRepository.changePrivateInfo(clubId, 'Name', newName);\r\n\r\n//////////////////////// END CLUB CHANGE NAME //////////////////////////////////////\r\n\r\n///////////////////////// CLUB CHANGE ADDRESS /////////////////////////////////////////// \r\n\r\n// const clubId = readlineSync.question('Please enter id: ');\r\n// const newAddress = readlineSync.question('Please enter new address: ');\r\n\r\n// CustomerRepository.changePrivateInfo(clubId, 'Address', newAddress);\r\n\r\n//////////////////////// END CLUB CHANGE ADDRESS //////////////////////////////////////\r\n\r\n///////////////////////// CLUB CHANGE ADDRESS /////////////////////////////////////////// \r\n\r\n// const clubId = readlineSync.question('Please enter id: ');\r\n// const newPhoneNumber = readlineSync.question('Please enter new phone number: ');\r\n\r\n// CustomerRepository.changePrivateInfo(clubId, 'PhoneNumber', newPhoneNumber);\r\n\r\n//////////////////////// END CLUB CHANGE ADDRESS //////////////////////////////////////\r\n\r\n///////////////////////// CLUB CHANGE OPENING HOURS /////////////////////////////////////////// \r\n\r\n// const clubId = readlineSync.question('Please enter id: ');\r\n// const newOpeningHours = readlineSync.question('Please enter new opening huors: ');\r\n// const newClosingHours = readlineSync.question('Please enter new closing huors: ');\r\n\r\n// ClubRepository.changeInfo(clubId, 'OpeningHours', \r\n//     [dateTimeFunctions.calculateOpeningHours(newOpeningHours), dateTimeFunctions.calculateOpeningHours(newClosingHours)]);\r\n\r\n//////////////////////// END CLUB CHANGE OPENING HOURS //////////////////////////////////////\r\n\r\n/////////////////////// CLUB CHANGE SALE NAME //////////////////////////////////////////////\r\n\r\n// const clubId = readlineSync.question('Please enter club id: ');\r\n// const saleId = readlineSync.question('Please enter sale id: ');\r\n// const newName = readlineSync.question('Please enter new name: ');\r\n\r\n// ClubRepository.changeSaleInfo(clubId, saleId, 'Name', newName);\r\n\r\n///////////////////// END CLUB CHANGE SALE NAME ///////////////////////////////////////////\r\n\r\n/////////////////////// CLUB CHANGE SALE DESCRIPTION //////////////////////////////////////\r\n\r\n// const clubId = readlineSync.question('Please enter club id: ');\r\n// const saleId = readlineSync.question('Please enter sale id: ');\r\n// const newDescription = readlineSync.question('Please enter new description: ');\r\n\r\n// ClubRepository.changeSaleInfo(clubId, saleId, 'Description', newDescription);\r\n\r\n///////////////////// END CLUB CHANGE SALE DESCRIPTION ///////////////////////////////////\r\n\r\n/////////////////////// CLUB CHANGE SALE PRICE //////////////////////////////////////////\r\n\r\n// const clubId = readlineSync.question('Please enter club id: ');\r\n// const saleId = readlineSync.question('Please enter sale id: ');\r\n// const newPrice = readlineSync.question('Please enter new price: ');\r\n\r\n// ClubRepository.changeSaleInfo(clubId, saleId, 'Price', newPrice);\r\n\r\n///////////////////// END CLUB CHANGE SALE PRICE //////////////////////////////////////\r\n\r\n/////////////////////// CLUB CHANGE SALE POINTS //////////////////////////////////////\r\n\r\n// const clubId = readlineSync.question('Please enter club id: ');\r\n// const saleId = readlineSync.question('Please enter sale id: ');\r\n// const newPoints = readlineSync.question('Please enter new points: ');\r\n\r\n// ClubRepository.changeSaleInfo(clubId, saleId, 'Points', newPoints);\r\n\r\n///////////////////// END CLUB CHANGE SALE POINTS ///////////////////////////////////\r\n\r\n/////////////////// CLUB ADD BRANCH ////////////////////////////////////////////////\r\n\r\n// const clubId = readlineSync.question('Please enter club id: ');\r\n// const branchId = readlineSync.question('Please enter branch id: ');\r\n\r\n// ClubRepository.addBranch(clubId, branchId);\r\n\r\n///////////////// END CLUB ADD BRANCH //////////////////////////////////////////\r\n\r\n///////////////////// CLUB REMOVE BRANCH //////////////////////////////////////\r\n\r\n// const clubId = readlineSync.question('Please enter club id: ');\r\n// const branchId = readlineSync.question('Please enter branch id: ');\r\n\r\n// ClubRepository.removeBranch(clubId, branchId);\r\n\r\n/////////////////// END REMOVE BRANCH  /////////////////////////////////////////\r\n\r\n\r\n//////////////// CUSTOMER ADD CREDIT /////////////////////////////////////////\r\n\r\n// const customerId = readlineSync.question('Please enter your id: ');\r\n// const creditId = readlineSync.question('Please enter credit id: ');\r\n// const dateOfPurchase = readlineSync.question('Please enter date of purchase (dd/MM/yyyy): ');\r\n// const dateOfExpired = readlineSync.question('Please enter date of expired (dd/MM/yyyy): ');\r\n// const items = readlineSync.question('Please enter items: ');\r\n// const totalCredit = readlineSync.question('Please enter total credit: ');\r\n\r\n// const credit = new Credit({\r\n//     Id: creditId,\r\n//     DateOfPurchase: dateTimeFunctions.changeDateFortmat(dateOfPurchase),\r\n//     DateOfExpired: dateTimeFunctions.changeDateFortmat(dateOfExpired),\r\n//     Items: items.split(','),\r\n//     TotalCredit: totalCredit\r\n// });\r\n\r\n// CustomerRepository.addCreditOrReceipt(customerId, credit, \"Credits\");\r\n\r\n/////////////// END CUSTOMER ADD CREDIT //////////////////////////////////////////////////\r\n\r\n////////////////// CUSTOMER REMOVE CREDIT /////////////////////////////////////////////////\r\n\r\n// const customerId = readlineSync.question('Please enter your id: ');\r\n// const creditId = readlineSync.question('Please enter credit id: ');\r\n\r\n// CustomerRepository.removeCreditOrReceipt(customerId, creditId, \"Credits\" );\r\n\r\n///////////////// END CUSTOMER REMOVE CREDIT ////////////////////////////////////////////\r\n\r\n/////////////////////// CUSTOMER CHANGE CREDIT DATE PURCHASE ///////////////////////////\r\n\r\n// const customerId = readlineSync.question('Please enter customer id: ');\r\n// const creditId = readlineSync.question('Please enter credit id: ');\r\n// const newDateOfPurchase = readlineSync.question('Please enter new date of purchase (dd/MM/yyyy): ');\r\n\r\n// let newForamatDateOfPurchase = dateTimeFunctions.changeDateFortmat(newDateOfPurchase);\r\n\r\n// CustomerRepository.changeCreditOrReceiptInfo(customerId, creditId, 'DateOfPurchase', newForamatDateOfPurchase, \"Credits\" );\r\n\r\n///////////////////// END CUSTOMER CHANGE CREDIT DATE PURCHASE //////////////////////////\r\n\r\n/////////////////////// CUSTOMER CHANGE CREDIT DATE EXPIRED ///////////////////////////\r\n\r\n// const customerId = readlineSync.question('Please enter customer id: ');\r\n// const creditId = readlineSync.question('Please enter credit id: ');\r\n// const newDateOfExpired = readlineSync.question('Please enter new date of expired (dd/MM/yyyy): ');\r\n\r\n// let newForamatDateOfExpired = dateTimeFunctions.changeDateFortmat(newDateOfExpired);\r\n\r\n// CustomerRepository.changeCreditOrReceiptInfo(customerId, creditId, 'DateOfExpired', newForamatDateOfExpired, \"Credits\" );\r\n\r\n///////////////////// END CUSTOMER CHANGE CREDIT DATE EXPIRED ///////////////////////////\r\n\r\n/////////////////////// CUSTOMER CHANGE CREDIT TOTAL CREDIT ///////////////////////////\r\n\r\n// const customerId = readlineSync.question('Please enter customer id: ');\r\n// const creditId = readlineSync.question('Please enter credit id: ');\r\n// const newTotalCredit = readlineSync.question('Please enter new total credit: ');\r\n\r\n// CustomerRepository.changeCreditOrReceiptInfo(customerId, creditId, 'TotalCredit', newTotalCredit, \"Credits\" );\r\n\r\n///////////////////// END CUSTOMER CHANGE CREDIT TOTAL CREDIT ///////////////////////////\r\n\r\n/////////////////////// CUSTOMER ADD CREDIT ITEM ///////////////////////////\r\n\r\n// const customerId = readlineSync.question('Please enter customer id: ');\r\n// const creditId = readlineSync.question('Please enter credit id: ');\r\n// const newItem = readlineSync.question('Please enter new item: ');\r\n\r\n// CustomerRepository.addItemCreditOrReceipt(customerId, creditId, newItem, \"Credits\");\r\n\r\n///////////////////// END CUSTOMER ADD CREDIT ITEM ///////////////////////////\r\n\r\n/////////////////////// CUSTOMER CHANGE CREDIT ITEM ///////////////////////////\r\n\r\n// const customerId = readlineSync.question('Please enter customer id: ');\r\n// const creditId = readlineSync.question('Please enter credit id: ');\r\n// const oldItem = readlineSync.question('Please enter old item: ');\r\n// const newItem = readlineSync.question('Please enter new item: ');\r\n\r\n// CustomerRepository.changeItemsCreditOrReceipt(customerId, creditId, newItem, oldItem, \"Credits\");\r\n\r\n///////////////////// END CUSTOMER CHANGE CREDIT ITEM ///////////////////////////\r\n\r\n/////////////////////// CUSTOMER CREDIT REMOVE ITEM ///////////////////////////\r\n\r\n// const customerId = readlineSync.question('Please enter customer id: ');\r\n// const creditId = readlineSync.question('Please enter credit id: ');\r\n// const oldItem = readlineSync.question('Please enter old item: ');\r\n\r\n// CustomerRepository.removeItemsCreditOrReceipt(customerId, creditId, oldItem, \"Credits\");\r\n\r\n///////////////////// END CUSTOMER CREDIT REMOVE ITEM ///////////////////////////\r\n\r\n\r\n//////////////// CUSTOMER ADD RECEIPT /////////////////////////////////////////\r\n\r\n// const customerId = readlineSync.question('Please enter your id: ');\r\n// const receiptId = readlineSync.question('Please enter receipt id: ');\r\n// const dateOfPurchase = readlineSync.question('Please enter date of purchase (dd/MM/yyyy): ');\r\n// const items = readlineSync.question('Please enter items: ');\r\n// const totalReceipt = readlineSync.question('Please enter total credit: ');\r\n\r\n// const receipt = new Receipt({\r\n//     Id: receiptId,\r\n//     DateOfPurchase: dateTimeFunctions.changeDateFortmat(dateOfPurchase),\r\n//     Items: items.split(','),\r\n//     TotalCredit: totalReceipt\r\n// });\r\n\r\n// console.log(receipt);\r\n// CustomerRepository.addCreditOrReceipt(customerId, receipt, \"Receipts\");\r\n\r\n/////////////// END CUSTOMER ADD RECEIPT //////////////////////////////////////////////////\r\n\r\n////////////////// CUSTOMER REMOVE RECEIPT /////////////////////////////////////////////////\r\n\r\n// const customerId = readlineSync.question('Please enter your id: ');\r\n// const receiptId = readlineSync.question('Please enter receipt id: ');\r\n\r\n// CustomerRepository.removeCreditOrReceipt(customerId, receiptId, \"Receipts\");\r\n\r\n///////////////// END CUSTOMER REMOVE RECEIPT ////////////////////////////////////////////\r\n\r\n\r\n/////////////////////// CUSTOMER CHANGE RECEIPT DATE PURCHASE ///////////////////////////\r\n\r\n// const customerId = readlineSync.question('Please enter customer id: ');\r\n// const receiptId = readlineSync.question('Please enter receipt id: ');\r\n// const newDateOfPurchase = readlineSync.question('Please enter new date of purchase (dd/MM/yyyy): ');\r\n\r\n// let newForamatDateOfPurchase = dateTimeFunctions.changeDateFortmat(newDateOfPurchase);\r\n\r\n// CustomerRepository.changeCreditOrReceiptInfo(customerId, receiptId, 'DateOfPurchase', newForamatDateOfPurchase, \"Receipts\" );\r\n\r\n///////////////////// END CUSTOMER CHANGE RECEIPT DATE PURCHASE //////////////////////////\r\n\r\n\r\n// ///////////////////// CUSTOMER CHANGE RECEIPT TOTAL CREDIT  ///////////////////////////\r\n\r\n// const customerId = readlineSync.question('Please enter customer id: ');\r\n// const recepitId = readlineSync.question('Please enter recepit id: ');\r\n// const newTotalCredit = readlineSync.question('Please enter new total credit: ');\r\n\r\n// CustomerRepository.changeCreditOrReceiptInfo(customerId, recepitId, 'TotalCredit', newTotalCredit, \"Receipts\" );\r\n\r\n// /////////////////// END CUSTOMER CHANGE RECEIPT TOTAL CREDIT ///////////////////////////\r\n\r\n// ///////////////////// CUSTOMER ADD RECEIPT ITEM ///////////////////////////\r\n\r\n// const customerId = readlineSync.question('Please enter customer id: ');\r\n// const recepitId = readlineSync.question('Please enter recepit id: ');\r\n// const newItem = readlineSync.question('Please enter new item: ');\r\n\r\n// CustomerRepository.addItemCreditOrReceipt(customerId, recepitId, newItem, \"Receipts\");\r\n\r\n// /////////////////// END CUSTOMER ADD RECEIPT ITEM ///////////////////////////\r\n\r\n// ///////////////////// CUSTOMER CHANGE RECEIPT ITEM ///////////////////////////\r\n\r\n// const customerId = readlineSync.question('Please enter customer id: ');\r\n// const recepitId = readlineSync.question('Please enter recepit id: ');\r\n// const oldItem = readlineSync.question('Please enter old item: ');\r\n// const newItem = readlineSync.question('Please enter new item: ');\r\n\r\n// CustomerRepository.changeItemsCreditOrReceipt(customerId, recepitId, newItem, oldItem, \"Receipts\");\r\n\r\n// /////////////////// END CUSTOMER CHANGE RECEIPT ITEM ///////////////////////////\r\n\r\n// ///////////////////// CUSTOMER RECEIPT REMOVE ITEM ///////////////////////////\r\n\r\n// const customerId = readlineSync.question('Please enter customer id: ');\r\n// const receiptId = readlineSync.question('Please enter recepit id: ');\r\n// const oldItem = readlineSync.question('Please enter old item: ');\r\n\r\n// CustomerRepository.removeItemsCreditOrReceipt(customerId, receiptId, oldItem, \"Receipts\");\r\n\r\n// /////////////////// END CUSTOMER RECEIPT REMOVE ITEM ///////////////////////////\r\n\r\n"]}