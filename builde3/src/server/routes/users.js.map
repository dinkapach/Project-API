{"version":3,"sources":["../../../../src/server/routes/users.js"],"names":["router","Router","get","req","res","next","id","params","findCustomerById","then","customer","status","json","console","log","catch","err","end","pass","pass2","pass3","post","customerUpdate","body","customerId","updateCustomer","customerUpdated","newCustomer","addCustomer","creditUpdate","editCustomerCredit","creditUpdated","userId","creditObj","credit","clubId","dateOfPurchase","dateOfExpired","items","totalCredit","addCustomerCredit","removeCreditOrReceipt","isAuth","user","userUpdated"],"mappings":"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","file":"users.js","sourcesContent":["import express from 'express';\r\nimport Customer from '../.././models/user-model';\r\nimport Credit from '../.././models/credit-model';\r\nimport CustomerRepository from '../.././database/repositories/customer.repository';\r\n\r\nconst router = express.Router();\r\n\r\n/* GET users listing. */\r\nrouter.get('/:id', (req, res, next) => {\r\n  \r\n  const id = req.params.id;\r\n  CustomerRepository.findCustomerById(id)\r\n  .then(customer => {\r\n    if(customer) {\r\n      res.status(200).json(customer);\r\n    }\r\n    else { \r\n      console.log(\"user not found\");\r\n      res.status(200).json({customer: customer});\r\n    }\r\n  })\r\n  .catch(err => { \r\n    console.log(err); \r\n    res.status(500).end();\r\n  });\r\n\r\n});\r\n\r\nrouter.get('/testPassChange', (req, res, next) => {\r\n  \r\n  const pass = \"1234567\";\r\n  const pass2 = \"1234567\";\r\n  const pass3 = \"123456\";\r\n\r\n  console.log(pass);\r\n  // const id = 15;\r\n\r\n  // CustomerRepository.findCustomerById(15)\r\n  // .then(customer => {\r\n  //   if(customer) {\r\n  //     console.log(\"success\" + customer);\r\n  //     res.status(200).json(customer);\r\n  //   }\r\n  //   else { \r\n  //     console.log(\"user not found\" + customer);\r\n  //     res.status(400).json(false);\r\n  //   }\r\n  // })\r\n  // .catch(err => { \r\n  //   console.log(err); \r\n  //   res.status(500).end();\r\n  // });\r\n\r\n});\r\n\r\nrouter.post('/testDin', (req, res, next) => {\r\n  console.log(\"hello world\");\r\n  res.status(200).json(\"customerUpdated\");\r\n});\r\n\r\n// router.post('/changePassword', (req, res, next) => {\r\n//   const currentPassword = req.body.currentPassword;\r\n//   const newPassword = req.body.newPassword;\r\n//   const customerId = req.body.customerId;\r\n//   console.log(\"currentPassword: \" + currentPassword + \"newPassword: \" + newPassword + \"customerId\" + customerId);\r\n\r\n//   CustomerRepository.findCustomerById(customerId)\r\n//   .then(customer => {\r\n//     console.log(customer);\r\n//     if(customer){\r\n//       Crypto.isMatch(currentPassword, customer.password)\r\n//       .then(match => {\r\n//         console.log(match);\r\n//           if(match) {\r\n//             // CustomerRepository\r\n//           } \r\n//           else { \r\n//             res.status(400).json(\"wrong password\");\r\n//             console.log(\"wrong password\"); \r\n//           }\r\n//       })\r\n//       .catch(err => { \r\n//         console.log(err); \r\n//         res.status(500).json(err);\r\n//       })\r\n//     }\r\n//     else {\r\n//       res.status(400).json(customer);\r\n//     }\r\n//   })\r\n//   .catch(err => {\r\n//     console.log(err);\r\n//     res.status(500).end();\r\n//  });\r\n// });\r\n\r\nrouter.post('/updateCustomerInfo', (req, res, next) => {\r\n  const customerUpdate = req.body.customerUpdate;\r\n  const customerId = req.body.customerId;\r\n  console.log(customerId, customerUpdate);\r\n  // res.status(200).json(true);\r\n  CustomerRepository.updateCustomer(customerId, customerUpdate)\r\n  .then(customerUpdated => {\r\n    console.log(\"return from updateCustomer:\\n\" + customerUpdated);\r\n    res.status(200).json(customerUpdated);\r\n  })\r\n  .catch(err => {\r\n    console.log('Customer was not updated', err);\r\n    res.status(500).json(false);\r\n  });\r\n});\r\n\r\n// router.post('/singup', (req, res, next) => {\r\n//   const customerUpdate = req.body.customerUpdate;\r\n//   const customerId = req.body.customerId;\r\n//   console.log(customerId, customerUpdate);\r\n//   // res.status(200).json(true);\r\n//   CustomerRepository.updateCustomer(customerId, customerUpdate)\r\n//   .then(customerUpdated => {\r\n//     console.log(\"return from updateCustomer:\\n\" + customerUpdated);\r\n//     res.status(200).json(customerUpdated);\r\n//   })\r\n//   .catch(err => {\r\n//     console.log('Customer was not updated', err);\r\n//     res.status(500).json(false);\r\n//   });\r\n// });\r\n\r\nrouter.post('/signup', (req, res, next) => {\r\n  console.log(\"newCustomer\");\r\n  const newCustomer = req.body.customer;\r\n  console.log(newCustomer);\r\n  CustomerRepository.addCustomer(newCustomer)\r\n  .then(customer =>{\r\n    console.log(customer);\r\n    if(customer){\r\n      console.log(\"return customer\\n\"+customer);\r\n      res.status(200).json(customer);\r\n    }\r\n    else{\r\n      console.log(\"return fail customer\\n\"+customer);\r\n      res.status(400).json(customer);\r\n    }\r\n  })\r\n  .catch(err => {\r\n    console.log(\"error create customer\" + err);\r\n    res.status(500).json(err);\r\n  });\r\n});\r\n\r\nrouter.post('/editCredit', (req, res, next) => {\r\n  const creditUpdate = req.body.creditUpdate;\r\n  const customerId = req.body.customerId;\r\n  console.log(customerId, creditUpdate);\r\n  // res.status(200).json(true);\r\n  CustomerRepository.editCustomerCredit(customerId, creditUpdate)\r\n  .then(creditUpdated => {\r\n    console.log(\"return from updateCustomer:\\n\" + creditUpdated);\r\n    res.status(200).json(creditUpdated);\r\n  })\r\n  .catch(err => {\r\n    console.log('Credit was not updated', err);\r\n    res.status(500).json(false);\r\n  });\r\n});\r\n\r\nrouter.post('/addCredit', (req, res, next) => {\r\n  const userId = req.body.userId;\r\n  const creditObj = req.body.credit;\r\n  var credit = new Credit();\r\n  credit.id = creditObj.id;\r\n  credit.clubId = creditObj.clubId;\r\n  credit.dateOfPurchase = creditObj.dateOfPurchase;\r\n  credit.dateOfExpired = creditObj.dateOfExpired;\r\n  credit.items = creditObj.items;\r\n  credit.totalCredit = creditObj.totalCredit;\r\n\r\n  CustomerRepository.addCustomerCredit(userId, credit)\r\n  .then(userUpdated => {\r\n    console.log('credit was added');\r\n    res.status(200).json(true);\r\n  })\r\n  .catch(err => {\r\n    console.log('credit was not updated', err);\r\n    res.status(500).json(false);\r\n  });\r\n});\r\n\r\n\r\nrouter.post('/deleteCredit', (req, res, next) => {\r\n  const userId = req.body.userId;\r\n  const creditObj = req.body.credit;\r\n\r\n  console.log(\"from server-deleteCredit - user id is: \", userId );\r\n  \r\n  CustomerRepository.removeCreditOrReceipt(userId, creditObj.id, \"credits\" )\r\n  .then(userUpdated => {\r\n    console.log('credit was deleted');\r\n    res.status(200).json({isAuth: true, user: userUpdated});\r\n  })\r\n  .catch(err => {\r\n    console.log('credit was not deleted', err);\r\n    res.status(500).json(false);\r\n  });\r\n});\r\n\r\n\r\nexport default router;\r\n"]}