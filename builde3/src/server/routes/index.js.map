{"version":3,"sources":["../../../../src/server/routes/index.js"],"names":["router","Router","get","req","res","next","status","json","response","post","password","body","email","console","log","findCustomerByEmail","then","customer","isMatch","match","catch","err","end"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,SAAS,kBAAQC,MAAR,EAAf;;AAEA;AACAD,OAAOE,GAAP,CAAW,GAAX,EAAgB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClCD,MAAIE,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,UAAW,KAAZ,EAArB;AACD,CAFD;;AAIAR,OAAOS,IAAP,CAAY,GAAZ,EAAiB,UAACN,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACnC,MAAMK,WAAWP,IAAIQ,IAAJ,CAASD,QAA1B;AACA,MAAME,QAAQT,IAAIQ,IAAJ,CAASC,KAAvB;AACAC,UAAQC,GAAR,CAAY,YAAYF,KAAZ,GAAoB,QAApB,GAA+BF,QAA3C;AACA,qBAAmBK,mBAAnB,CAAuCH,KAAvC,EACCI,IADD,CACM,oBAAY;AAChBH,YAAQC,GAAR,CAAYG,QAAZ;AACA,QAAGA,QAAH,EAAY;AACV,uBAAOC,OAAP,CAAeR,QAAf,EAAyBO,SAASP,QAAlC,EACCM,IADD,CACM,iBAAS;AACbH,gBAAQC,GAAR,CAAYK,KAAZ;AACE,YAAGA,KAAH,EAAU;AACNN,kBAAQC,GAAR,CAAY,oBAAZ;AACAV,cAAIE,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBU,QAArB;AACH,SAHD,MAIK;AACHb,cAAIE,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,gBAArB;AACAM,kBAAQC,GAAR,CAAY,gBAAZ;AACD;AACJ,OAXD,EAYCM,KAZD,CAYO,eAAO;AACZP,gBAAQC,GAAR,CAAYO,GAAZ;AACAjB,YAAIE,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBc,GAArB;AACD,OAfD;AAgBD,KAjBD,MAkBK;AACHjB,UAAIE,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBU,QAArB;AACD;AACF,GAxBD,EAyBCG,KAzBD,CAyBO,eAAO;AACZP,YAAQC,GAAR,CAAYO,GAAZ;AACAjB,QAAIE,MAAJ,CAAW,GAAX,EAAgBgB,GAAhB;AACF,GA5BA;AA6BD,CAjCD;kBAkCetB,M","file":"index.js","sourcesContent":["import express from 'express';\r\nimport mongoose from 'mongoose';\r\nimport Customer from '../.././models/user-model';\r\nimport CustomerRepository from '../.././database/repositories/customer.repository';\r\nimport Crypto from '../.././services/crypto.service';\r\nimport dateTimeFunctions from '../.././helpers/datetime.functions';\r\n\r\nconst router = express.Router();\r\n\r\n/* GET home page. */\r\nrouter.get('/', (req, res, next) => {\r\n  res.status(200).json({response : \"OK!\"});\r\n});\r\n\r\nrouter.post('/', (req, res, next) => {\r\n  const password = req.body.password;\r\n  const email = req.body.email;\r\n  console.log(\"email: \" + email + \"pass: \" + password);\r\n  CustomerRepository.findCustomerByEmail(email)\r\n  .then(customer => {\r\n    console.log(customer);\r\n    if(customer){\r\n      Crypto.isMatch(password, customer.password)\r\n      .then(match => {\r\n        console.log(match);\r\n          if(match) {\r\n              console.log(\"customer logged in\");\r\n              res.status(200).json(customer);\r\n          } \r\n          else { \r\n            res.status(400).json(\"wrong password\");\r\n            console.log(\"wrong password\"); \r\n          }\r\n      })\r\n      .catch(err => { \r\n        console.log(err); \r\n        res.status(500).json(err);\r\n      })\r\n    }\r\n    else {\r\n      res.status(400).json(customer);\r\n    }\r\n  })\r\n  .catch(err => {\r\n    console.log(err);\r\n    res.status(500).end();\r\n });\r\n});\r\nexport default router;"]}