{"version":3,"sources":["../../../../src/database/repositories/manager.repository.js"],"names":["addManager","manager","save","removeManager","remove","findManagerById","id","Promise","resolve","reject","findOne","err","findManagerByEmail","email","addClub","clubId","clubs","push","removeClubById","index","i","forEach","splice","addSale","sale","findClubById","then","club","sales","catch","console","log","removeSale","pop","addPointsToCustomerById","customerId","numOfPoints","usersClub","userClub","findCustomerById","customer","_id","equals","points","parseInt","Console","subscribePointsToCustomerById","UsersClub","Points","addBranchToClub","branchId","branches","removeBranchFromClub","ObjectId","branch"],"mappings":"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","file":"manager.repository.js","sourcesContent":["import ManagerModel from '../../models/manager-model';\r\nimport clubModel from './club.repository';\r\nimport customerModel from './customer.repository';\r\n\r\nexport default {\r\n    addManager(manager) {\r\n        manager.save();\r\n    },\r\n    removeManager(manager) {\r\n        manager.remove();\r\n    },\r\n    findManagerById(id) {\r\n        return new Promise((resolve, reject) => {\r\n            ManagerModel.findOne({ id: id }, (err, manager) => {\r\n                if (err) reject(err);\r\n                else resolve(manager);\r\n            });\r\n        });\r\n    },\r\n    findManagerByEmail(email) {\r\n        return new Promise((resolve, reject) => {\r\n            ManagerModel.findOne({ email: email }, (err, manager) => {\r\n                if (err) reject(err);\r\n                else resolve(manager);\r\n            });\r\n        });\r\n    },\r\n    addClub(manager, clubId) {\r\n        manager.clubs.push(clubId);\r\n        manager.save();\r\n    },\r\n    removeClubById(manager, clubId) {\r\n        var index;\r\n        var i = 0;\r\n\r\n        manager.clubs.forEach(function (id) {\r\n            if (clubId == id)\r\n                index = i;\r\n            i++;\r\n        }, this);\r\n\r\n        manager.clubs.splice(index, 1);\r\n        manager.save();\r\n        //TODO : delete this club also\r\n    },\r\n    addSale(clubId, sale) {\r\n        return clubModel.findClubById(clubId)\r\n            .then(club => {\r\n                club.sales.push(sale);\r\n                club.save();\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    },\r\n    removeSale(clubId, sale) {\r\n        return clubModel.findClubById(clubId)\r\n            .then(club => {\r\n                club.sales.pop(sale);\r\n                club.save();\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    },\r\n    addPointsToCustomerById(customerId, clubId, numOfPoints) {\r\n        console.log(\" KAKA\");\r\n        return clubModel.findClubById(clubId)\r\n            .then(club => {\r\n                if (club) {\r\n\r\n                    club.usersClub.forEach(function (userClub) {\r\n                        customerModel.findCustomerById(customerId)\r\n                            .then(customer => {\r\n                                if (customer) {\r\n                                    if (customer._id.equals(userClub.customerId)) {\r\n                                        userClub.points = parseInt(userClub.points) + parseInt(numOfPoints);\r\n                                        console.log(\"points: \", userClub.points);\r\n                                        club.save();\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    Console.log(\"customer not found\");\r\n                                }\r\n                            })\r\n                            .catch(err => {\r\n                                console.log(err);\r\n                            });\r\n\r\n\r\n                    })\r\n                }\r\n                else {\r\n                    console.log(\"no clubs\");\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    },\r\n    subscribePointsToCustomerById(customerId, club, numOfPoints) {\r\n\r\n        clubModel.findClubById(clubId)\r\n            .then(club => {\r\n                club.UsersClub.findOne({ customerId: customerId }, (err, customer) => {\r\n\r\n                    if (err) {\r\n                        console.log(\"CustomerId not found\");\r\n                    }\r\n                    else {\r\n                        customer.Points -= numOfPoints;\r\n                        console.log(\"addsubscribei points to costumer!\");\r\n                    }\r\n                });\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    },\r\n    addBranchToClub(clubId, branchId) {\r\n        clubModel.findClubById(clubId)\r\n            .then(club => {\r\n                club.branches.push(branchId);\r\n                club.save();\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    },\r\n    removeBranchFromClub(clubId, branchId) {\r\n        clubModel.findClubById(clubId)\r\n            .then(club => {\r\n                club.UsersClub.findOne({ ObjectId: branchId }, (err, branch) => {\r\n                    if (err) {\r\n                        console.log(\"Branch doesn't exist\");\r\n                    }\r\n                    else {\r\n                        club.branches.pop(branch);\r\n                        club.save();\r\n                        console.log(\"branch removed\");\r\n                    }\r\n                });\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n}\r\n"]}