{"version":3,"sources":["../../../../src/database/repositories/club.repository.js"],"names":["addClub","club","create","findClubById","id","Promise","resolve","reject","findOne","err","updateClub","clubId","clubUpdate","findOneAndUpdate","upsert","new","obj","console","log","findClubByObjectId","_id","getAllClubs","find","clubs","getAllCredits","credits","removeCustomerByCustomerId","customerId","index","i","usersClub","forEach","userClub","splice","addSale","sale","sales","push","save","findSale","saleId","removeSale","addPointsToClub","points","equals","parseInt","Points","RemovePointsFromClub","changeInfo","itemIndex","newItem","then","catch","changeSaleInfo","addBranch","branchId","branch","branches","indexOf","removeBranch"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;kBAEe;AAEXA,WAFW,mBAEHC,IAFG,EAEG;AACV,eAAO,oBAAUC,MAAV,CAAiBD,IAAjB,CAAP;AACH,KAJU;AAKXE,gBALW,wBAKEC,EALF,EAKM;AACb,eAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAUC,OAAV,CAAkB,EAACJ,IAAIA,EAAL,EAAlB,EAA4B,UAACK,GAAD,EAAMR,IAAN,EAAe;AACvC,oBAAIQ,GAAJ,EAASF,OAAOE,GAAP,EAAT,KACKH,QAAQL,IAAR;AACR,aAHD;AAIH,SALM,CAAP;AAMH,KAZU;AAaXS,cAbW,sBAaAC,MAbA,EAaQC,UAbR,EAaoB;AAC3B,eAAO,IAAIP,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAUM,gBAAV,CAA2B,EAAET,IAAKO,MAAP,EAA3B,EAA4CC,UAA5C,EAAwD,EAAEE,QAAQ,IAAV,EAAgBC,KAAK,IAArB,EAAxD,EAAqF,UAACN,GAAD,EAAMO,GAAN,EAAc;AACnG,oBAAIP,GAAJ,EAAQ;AACJQ,4BAAQC,GAAR,CAAY,iBAAZ;AACAX,2BAAOE,GAAP;AACH;AACDH,wBAAQU,GAAR;AACC,aAND;AAOH,SARM,CAAP;AASH,KAvBU;AAwBXG,sBAxBW,8BAwBQf,EAxBR,EAwBY;AACnB,eAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAUC,OAAV,CAAkB,EAACY,KAAKhB,EAAN,EAAlB,EAA6B,UAACK,GAAD,EAAMR,IAAN,EAAe;AACxC,oBAAIQ,GAAJ,EAASF,OAAOE,GAAP,EAAT,KACKH,QAAQL,IAAR;AACR,aAHD;AAIH,SALM,CAAP;AAMH,KA/BU;AAgCXoB,eAhCW,yBAgCG;AACV,eAAO,IAAIhB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,gCAAUe,IAAV,CAAe,EAAf,EAAmB,UAACb,GAAD,EAAMc,KAAN,EAAgB;AAC/B,oBAAGd,GAAH,EAAQF,OAAOE,GAAP,EAAR,KACKH,QAAQiB,KAAR;AACR,aAHD;AAIH,SALM,CAAP;AAMH,KAvCU;AAwCVC,iBAxCU,2BAwCM;AACb,eAAO,IAAInB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,kCAAYe,IAAZ,CAAiB,EAAjB,EAAqB,UAACb,GAAD,EAAMgB,OAAN,EAAkB;AACnC,oBAAGhB,GAAH,EAAQF,OAAOE,GAAP,EAAR,KACKH,QAAQmB,OAAR;AACR,aAHD;AAIH,SALM,CAAP;AAMH,KA/CU;AAgDXC,8BAhDW,sCAgDgBzB,IAhDhB,EAgDsB0B,UAhDtB,EAgDiC;AACxC,eAAO,IAAItB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACxC,gBAAIqB,QAAQ,CAAZ;AACA,gBAAIC,IAAI,CAAR;AACA5B,iBAAK6B,SAAL,CAAeC,OAAf,CAAuB,UAACC,QAAD,EAAc;AAC7B,oBAAGL,cAAcK,SAASL,UAA1B,EAAqC;AACjCC,4BAAQC,CAAR;AACH;AACLA;AACH,aALD;AAMA5B,iBAAK6B,SAAL,CAAeG,MAAf,CAAsBL,KAAtB,EAA6B,CAA7B;;AAEA,gCAAUf,gBAAV,CAA2B,EAAET,IAAKH,KAAKG,EAAZ,EAA3B,EAA6CH,IAA7C,EAAmD,EAAEa,QAAQ,IAAV,EAAgBC,KAAK,IAArB,EAAnD,EAAgF,UAACN,GAAD,EAAMO,GAAN,EAAc;AAC1F,oBAAIP,GAAJ,EAAQ;AACJQ,4BAAQC,GAAR,CAAYT,GAAZ;AACAF,2BAAOE,GAAP;AACH;AACDH,wBAAQU,GAAR;AACC,aANL;AAOC,SAlBM,CAAP;AAmBH,KApEU;AAqEXkB,WArEW,mBAqEHjC,IArEG,EAqEGkC,IArEH,EAsEX;AACKlC,aAAKmC,KAAL,CAAWC,IAAX,CAAgBF,IAAhB;AACAlC,aAAKqC,IAAL;AACJ,KAzEU;AA0EXC,YA1EW,oBA0EFtC,IA1EE,EA0EIuC,MA1EJ,EA2EX;AACI,eAAOvC,KAAKmC,KAAL,CAAWd,IAAX,CAAgB;AAAA,mBAAQa,KAAK/B,EAAL,IAAWoC,MAAnB;AAAA,SAAhB,CAAP;AACH,KA7EU;AA8EXC,cA9EW,sBA8EAxC,IA9EA,EA8EMuC,MA9EN,EA+EX;AACI,YAAIX,IAAI,CAAR;AACA,YAAID,QAAQ,CAAZ;AACA3B,aAAKmC,KAAL,CAAWL,OAAX,CAAmB,UAASI,IAAT,EAAe;AAC9B,gBAAGA,KAAK/B,EAAL,IAAWoC,MAAd,EACA;AACIZ,wBAAQC,CAAR;AACH;AACDA;AACH,SAND;AAOA5B,aAAKmC,KAAL,CAAWH,MAAX,CAAkBL,KAAlB,EAAyB,CAAzB;AACA3B,aAAKqC,IAAL;AACH,KA3FU;AA4FXI,mBA5FW,2BA4FKzC,IA5FL,EA4FW0B,UA5FX,EA4FuBgB,MA5FvB,EA4F8B;AACpC1C,aAAK6B,SAAL,CAAeC,OAAf,CAAuB,UAASC,QAAT,EAAmB;AACnC,gBAAGL,WAAWiB,MAAX,CAAkBZ,SAASL,UAA3B,CAAH,EACA;AACIK,yBAASW,MAAT,GAAmBE,SAASb,SAASc,MAAlB,IAA4BD,SAASF,MAAT,CAA/C;AACH;AACH,SALL;AAMI1C,aAAKqC,IAAL;AACT,KApGW;AAqGZS,wBArGY,gCAqGS9C,IArGT,EAqGe0B,UArGf,EAqG2BgB,MArG3B,EAqGkC;AACxC1C,aAAK6B,SAAL,CAAeC,OAAf,CAAuB,UAASC,QAAT,EAAmB;AACnC,gBAAGL,WAAWiB,MAAX,CAAkBZ,SAASL,UAA3B,CAAH,EACA;AACIK,yBAASW,MAAT,GAAmBE,SAASb,SAASW,MAAlB,IAA4BE,SAASF,MAAT,CAA/C;AACH;AACH,SALL;AAMI1C,aAAKqC,IAAL;AACT,KA7GW;AA8GXU,cA9GW,sBA8GArC,MA9GA,EA8GQsC,SA9GR,EA8GmBC,OA9GnB,EA+GX;AACI,aAAK/C,YAAL,CAAkBQ,MAAlB,EACCwC,IADD,CACM,gBAAQ;AACV,gBAAGlD,IAAH,EACA;AACIA,qBAAKgD,SAAL,IAAkBC,OAAlB;AACAjD,qBAAKqC,IAAL;AACH,aAJD,MAKK;AAAErB,wBAAQC,GAAR,CAAY,gBAAZ;AAAgC;AAC1C,SARD,EASCkC,KATD,CASO,eAAO;AAAEnC,oBAAQC,GAAR,CAAYT,GAAZ;AAAmB,SATnC;AAUF,KA1HS;AA2HX4C,kBA3HW,0BA2HI1C,MA3HJ,EA2HY6B,MA3HZ,EA2HoBS,SA3HpB,EA2H+BC,OA3H/B,EA4HV;AAAA;;AACG,aAAK/C,YAAL,CAAkBQ,MAAlB,EACCwC,IADD,CACM,gBAAQ;AACV,gBAAGlD,IAAH,EACA;AACI,oBAAIkC,OAAO,MAAKI,QAAL,CAActC,IAAd,EAAoBuC,MAApB,CAAX;AACA,oBAAGL,IAAH,EAAQ;AACJA,yBAAKc,SAAL,IAAkBC,OAAlB;AACAjD,yBAAKqC,IAAL;AACH,iBAHD,MAII;AACArB,4BAAQC,GAAR,CAAY,kBAAZ;AACH;AAEJ,aAXD,MAYK;AAAED,wBAAQC,GAAR,CAAY,gBAAZ;AAAgC;AAC1C,SAfD,EAgBCkC,KAhBD,CAgBO,eAAO;AAAEnC,oBAAQC,GAAR,CAAYT,GAAZ;AAAmB,SAhBnC;AAiBF,KA9IS;AA+IV6C,aA/IU,qBA+IA3C,MA/IA,EA+IQ4C,QA/IR,EAgJV;AAAA;;AACI,aAAKpD,YAAL,CAAkBQ,MAAlB,EACCwC,IADD,CACM,gBAAQ;AACV,gBAAGlD,IAAH,EACA;AACG,uBAAKE,YAAL,CAAkBoD,QAAlB,EACCJ,IADD,CACM,kBAAU;AACZ,wBAAGK,MAAH,EACA;AACI,4BAAGvD,KAAKwD,QAAL,CAAcC,OAAd,CAAsBF,OAAOpC,GAA7B,KAAqC,CAAC,CAAzC,EACI;AACInB,iCAAKwD,QAAL,CAAcpB,IAAd,CAAmBmB,OAAOpC,GAA1B;AACAnB,iCAAKqC,IAAL;AACH;AACR,qBAPD,MAQK;AAACrB,gCAAQC,GAAR,CAAY,oBAAZ;AAAoC;AAC7C,iBAXD,EAYCkC,KAZD,CAYO,eAAO;AAAEnC,4BAAQC,GAAR,CAAYT,GAAZ;AAAmB,iBAZnC;AAaF,aAfD,MAgBK;AAACQ,wBAAQC,GAAR,CAAY,kBAAZ;AAAkC;AAC3C,SAnBD,EAoBCkC,KApBD,CAoBO,eAAO;AAAEnC,oBAAQC,GAAR,CAAYT,GAAZ;AAAmB,SApBnC;AAqBH,KAtKS;AAuKVkD,gBAvKU,wBAuKGhD,MAvKH,EAuKW4C,QAvKX,EAwKV;AAAA;;AACI,aAAKpD,YAAL,CAAkBQ,MAAlB,EACCwC,IADD,CACM,gBAAQ;AACV,gBAAGlD,IAAH,EACA;AACI,uBAAKE,YAAL,CAAkBoD,QAAlB,EACCJ,IADD,CACM,kBAAU;AACZ,wBAAGK,MAAH,EACA;AACI,4BAAI5B,QAAQ3B,KAAKwD,QAAL,CAAcC,OAAd,CAAsBF,OAAOpC,GAA7B,CAAZ;AACAnB,6BAAKwD,QAAL,CAAcxB,MAAd,CAAqBL,KAArB,EAA4B,CAA5B;AACA3B,6BAAKqC,IAAL;AACH,qBALD,MAMK;AAAErB,gCAAQC,GAAR,CAAY,oBAAZ;AAAoC;AAC9C,iBATD,EAUCkC,KAVD,CAUO,eAAO;AAAEnC,4BAAQC,GAAR,CAAYT,GAAZ;AAAmB,iBAVnC;AAWH,aAbD,MAcK;AAAEQ,wBAAQC,GAAR,CAAY,kBAAZ;AAAkC;AAC5C,SAjBD,EAkBCkC,KAlBD,CAkBO,eAAO;AAAEnC,oBAAQC,GAAR,CAAYT,GAAZ;AAAmB,SAlBnC;AAmBH;AA5LS,C","file":"club.repository.js","sourcesContent":["import ClubModel from '../../models/club-model';\r\nimport CreditModel from '../../models/credit-model';\r\n\r\nexport default {\r\n\r\n    addClub(club) {\r\n        return ClubModel.create(club);\r\n    },\r\n    findClubById(id) {\r\n        return new Promise((resolve, reject) => {\r\n            ClubModel.findOne({id: id}, (err, club) => {\r\n                if (err) reject(err);\r\n                else resolve(club);\r\n            });\r\n        });\r\n    },\r\n    updateClub(clubId, clubUpdate) {\r\n        return new Promise((resolve, reject) => {\r\n            ClubModel.findOneAndUpdate({ id : clubId }, clubUpdate, { upsert: true, new: true }, (err, obj) => {\r\n            if (err){\r\n                console.log(\" in Update Club\");\r\n                reject(err);\r\n            }\r\n            resolve(obj);\r\n            });\r\n        });\r\n    },\r\n    findClubByObjectId(id) {\r\n        return new Promise((resolve, reject) => {\r\n            ClubModel.findOne({_id: id}, (err, club) => {\r\n                if (err) reject(err);\r\n                else resolve(club);\r\n            });\r\n        });\r\n    },\r\n    getAllClubs() {\r\n        return new Promise((resolve, reject) => {\r\n            ClubModel.find({}, (err, clubs) => {\r\n                if(err) reject(err);\r\n                else resolve(clubs);\r\n            });\r\n        });\r\n    },\r\n     getAllCredits() {\r\n        return new Promise((resolve, reject) => {\r\n            CreditModel.find({}, (err, credits) => {\r\n                if(err) reject(err);\r\n                else resolve(credits);\r\n            });\r\n        });\r\n    },\r\n    removeCustomerByCustomerId(club, customerId){\r\n        return new Promise((resolve, reject) => {\r\n        let index = 0;\r\n        let i = 0;\r\n        club.usersClub.forEach((userClub) => {\r\n                if(customerId == userClub.customerId){\r\n                    index = i;\r\n                }\r\n            i++;\r\n        });\r\n        club.usersClub.splice(index, 1);\r\n\r\n        ClubModel.findOneAndUpdate({ id : club.id }, club, { upsert: true, new: true }, (err, obj) => {\r\n            if (err){\r\n                console.log(err);\r\n                reject(err);\r\n            }\r\n            resolve(obj);\r\n            });\r\n        });\r\n    },\r\n    addSale(club, sale)\r\n    {\r\n         club.sales.push(sale);\r\n         club.save();\r\n    },\r\n    findSale(club, saleId)\r\n    {\r\n        return club.sales.find(sale => sale.id == saleId)\r\n    },\r\n    removeSale(club, saleId)\r\n    {\r\n        let i = 0;\r\n        let index = 0;\r\n        club.sales.forEach(function(sale) {\r\n            if(sale.id == saleId)\r\n            {\r\n                index = i;\r\n            }\r\n            i++;\r\n        });\r\n        club.sales.splice(index, 1);\r\n        club.save();\r\n    },\r\n    addPointsToClub(club, customerId, points){\r\n         club.usersClub.forEach(function(userClub) {\r\n                if(customerId.equals(userClub.customerId))\r\n                {\r\n                    userClub.points =  parseInt(userClub.Points) + parseInt(points);\r\n                }\r\n             });\r\n             club.save();\r\n   },\r\n   RemovePointsFromClub(club, customerId, points){\r\n         club.usersClub.forEach(function(userClub) {\r\n                if(customerId.equals(userClub.customerId))\r\n                {\r\n                    userClub.points =  parseInt(userClub.points) - parseInt(points);\r\n                }\r\n             });\r\n             club.save();\r\n   },\r\n    changeInfo(clubId, itemIndex, newItem)\r\n    {\r\n        this.findClubById(clubId)\r\n        .then(club => {\r\n            if(club)\r\n            {\r\n                club[itemIndex] = newItem;\r\n                club.save();\r\n            }\r\n            else { console.log(\"club not found\"); }\r\n        })\r\n        .catch(err => { console.log(err); });\r\n     },\r\n    changeSaleInfo(clubId, saleId, itemIndex, newItem)\r\n     {\r\n        this.findClubById(clubId)\r\n        .then(club => {\r\n            if(club)\r\n            {\r\n                let sale = this.findSale(club, saleId)\r\n                if(sale){\r\n                    sale[itemIndex] = newItem;\r\n                    club.save();\r\n                }\r\n                else{\r\n                    console.log(\"Sale wasnt found\");\r\n                }\r\n\r\n            }\r\n            else { console.log(\"Club not found\"); }\r\n        })\r\n        .catch(err => { console.log(err); });\r\n     },\r\n     addBranch(clubId, branchId)\r\n     {\r\n         this.findClubById(clubId)\r\n         .then(club => {\r\n             if(club)\r\n             {\r\n                this.findClubById(branchId)\r\n                .then(branch => {\r\n                    if(branch)\r\n                    {\r\n                        if(club.branches.indexOf(branch._id) == -1)\r\n                            {\r\n                                club.branches.push(branch._id);\r\n                                club.save();\r\n                            }\r\n                    }\r\n                    else {console.log(\"Branch wasnt found\"); }\r\n                })\r\n                .catch(err => { console.log(err); })\r\n             }\r\n             else {console.log(\"Club wasnt found\"); }\r\n         })\r\n         .catch(err => { console.log(err); });\r\n     },\r\n     removeBranch(clubId, branchId)\r\n     {\r\n         this.findClubById(clubId)\r\n         .then(club => {\r\n             if(club)\r\n             {\r\n                 this.findClubById(branchId)\r\n                 .then(branch => {\r\n                     if(branch)\r\n                     {\r\n                         let index = club.branches.indexOf(branch._id);\r\n                         club.branches.splice(index, 1);\r\n                         club.save();\r\n                     }\r\n                     else { console.log(\"Branch wasnt found\"); }\r\n                 })\r\n                 .catch(err => { console.log(err); })\r\n             }\r\n             else { console.log(\"Club wasnt found\"); }\r\n         })\r\n         .catch(err => { console.log(err); });\r\n     }\r\n}\r\n"]}