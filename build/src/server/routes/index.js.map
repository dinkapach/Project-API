{"version":3,"sources":["../../../../src/server/routes/index.js"],"names":["router","Router","get","req","res","next","status","json","response","post","password","body","email","findCustomerByEmail","then","isMatch","customer","match","console","log","isAuth","catch","err","id","firstName","lastName","address","phone","birthday","username","age","calculateAge","phoneNumber","img","clubs","credits","receipts","addCustomer"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,SAAS,kBAAQC,MAAR,EAAf;;AAEA;AACAD,OAAOE,GAAP,CAAW,GAAX,EAAgB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAClCD,MAAIE,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACC,UAAW,KAAZ,EAArB;AACD,CAFD;;AAIAR,OAAOS,IAAP,CAAY,GAAZ,EAAiB,UAACN,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACnC,MAAMK,WAAWP,IAAIQ,IAAJ,CAASD,QAA1B;AACA,MAAME,QAAQT,IAAIQ,IAAJ,CAASC,KAAvB;;AAEA,qBAAmBC,mBAAnB,CAAuCD,KAAvC,EACCE,IADD,CACM,oBAAY;AACd,qBAAOC,OAAP,CAAeL,QAAf,EAAyBM,SAASN,QAAlC,EACCI,IADD,CACM,iBAAS;AACX,UAAGG,KAAH,EAAU;AACNC,gBAAQC,GAAR,CAAY,oBAAZ;AACAf,YAAIE,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEa,QAAS,IAAX,EAAiBJ,UAAUA,QAA3B,EAArB;AACH,OAHD,MAIK;AACHZ,YAAIE,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEa,QAAQ,KAAV,EAArB;AACAF,gBAAQC,GAAR,CAAY,gBAAZ;AACD;AACJ,KAVD,EAWCE,KAXD,CAWO,eAAO;AACZH,cAAQC,GAAR,CAAYG,GAAZ;AACD,KAbD;AAcH,GAhBD,EAiBCD,KAjBD,CAiBO,eAAO;AACZH,YAAQC,GAAR,CAAY,sBAAZ;AACAf,QAAIE,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEa,QAAS,KAAX,EAArB;AACF,GApBA;AAqBD,CAzBD;;AA4BApB,OAAOS,IAAP,CAAY,SAAZ,EAAuB,UAACN,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACzC,MAAMkB,KAAKpB,IAAIQ,IAAJ,CAASY,EAApB;AACA,MAAMC,YAAYrB,IAAIQ,IAAJ,CAASa,SAA3B;AACA,MAAMC,WAAWtB,IAAIQ,IAAJ,CAASc,QAA1B;AACA,MAAMf,WAAWP,IAAIQ,IAAJ,CAASD,QAA1B;AACA,MAAMgB,UAAUvB,IAAIQ,IAAJ,CAASe,OAAzB;AACA,MAAMd,QAAQT,IAAIQ,IAAJ,CAASC,KAAvB;AACA,MAAMe,QAAQxB,IAAIQ,IAAJ,CAASgB,KAAvB;AACA,MAAMC,WAAWzB,IAAIQ,IAAJ,CAASiB,QAA1B;AACA;;AAEA,MAAMZ,WAAW,wBAAa;AAC1BO,QAAIA,EADsB;AAE1BM,cAAUL,SAFgB;AAG1BA,eAAWA,SAHe;AAI1BC,cAAUA,QAJgB;AAK1Bf,cAAUA,QALgB;AAM1BgB,aAASA,OANiB;AAO1Bd,WAAOA,KAPmB;AAQ1BkB,SAAK,mBAAkBC,YAAlB,CAA+BH,QAA/B,CARqB;AAS1BI,iBAAaL,KATa;AAU1BM,SAAM,EAVoB;AAW1BL,cAAUA,QAXgB;AAY1BM,WAAO,EAZmB;AAa1BC,aAAS,EAbiB;AAc1BC,cAAU;AAdgB,GAAb,CAAjB;;AAiBAlB,UAAQC,GAAR,CAAYH,QAAZ;AACA,qBAAmBqB,WAAnB,CAA+BrB,QAA/B;;AAEAZ,MAAIE,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAACa,QAAQ,IAAT,EAArB;AAED,CAjCD;;kBAmCepB,M","file":"index.js","sourcesContent":["import express from 'express';\nimport mongoose from 'mongoose';\nimport Customer from '../.././models/user-model';\nimport CustomerRepository from '../.././database/repositories/customer.repository';\nimport Crypto from '../.././services/crypto.service';\nimport dateTimeFunctions from '../.././helpers/datetime.functions';\n\nconst router = express.Router();\n\n/* GET home page. */\nrouter.get('/', (req, res, next) => {\n  res.status(200).json({response : \"OK!\"});\n});\n\nrouter.post('/', (req, res, next) => {\n  const password = req.body.password;\n  const email = req.body.email;\n\n  CustomerRepository.findCustomerByEmail(email)\n  .then(customer => {\n      Crypto.isMatch(password, customer.password)\n      .then(match => {\n          if(match) {\n              console.log(\"customer logged in\");\n              res.status(200).json({ isAuth : true, customer: customer });\n          } \n          else { \n            res.status(200).json({ isAuth: false })\n            console.log(\"wrong password\"); \n          }\n      })\n      .catch(err => { \n        console.log(err); \n      })\n  })\n  .catch(err => {\n    console.log(\"customer wasnt found\");\n    res.status(200).json({ isAuth : false });\n });\n});\n\n\nrouter.post('/singup', (req, res, next) => {\n  const id = req.body.id;\n  const firstName = req.body.firstName;\n  const lastName = req.body.lastName;\n  const password = req.body.password;\n  const address = req.body.address;\n  const email = req.body.email;\n  const phone = req.body.phone;\n  const birthday = req.body.birthday;\n  //TODO#username\n\n  const customer = new Customer({\n      id: id,\n      username: firstName,\n      firstName: firstName,\n      lastName: lastName,\n      password: password,\n      address: address,\n      email: email,\n      age: dateTimeFunctions.calculateAge(birthday),\n      phoneNumber: phone,\n      img : \"\",\n      birthday: birthday,\n      clubs: [],\n      credits: [],\n      receipts: []\n  });\n\n  console.log(customer);\n  CustomerRepository.addCustomer(customer);\n\n  res.status(200).json({isAuth: true});\n\n})\n\nexport default router;"]}