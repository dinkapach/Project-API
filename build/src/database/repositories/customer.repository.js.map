{"version":3,"sources":["../../../../src/database/repositories/customer.repository.js"],"names":["addCustomer","customer","create","updateCustomer","cb","findOneAndUpdate","id","Id","exec","removeCustomer","remove","findCustomerById","Promise","resolve","reject","findOne","populate","then","catch","err","findCustomerByObjectId","_id","findCustomerByEmail","email","removeClubById","clubId","index","i","clubs","indexOf","Clubs","splice","save","changePrivateInfo","custId","newItem","console","log","addCreditOrReceipt","customerId","item","prop","exists","findCreditOrReceipt","push","removeCreditOrReceipt","creditId","getIndexOfCreditOrReceipt","find","credit","forEach","changeCreditOrReceiptInfo","itemIndex","addItemCreditOrReceipt","items","changeItemsCreditOrReceipt","oldItem","Credits","removeItemsCreditOrReceipt"],"mappings":"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","file":"customer.repository.js","sourcesContent":["import mongoose from 'mongoose';\r\nimport CustomerModel from '../../models/user-model';\r\n\r\nexport default {\r\n\r\n    addCustomer(customer) {\r\n        return CustomerModel.create(customer);\r\n        // customer.save(function(err, customer){\r\n        //     if(err)\r\n        //         return console.error(err);\r\n        // });\r\n    },\r\n\r\n    updateCustomer(customer, cb) { //??? what is cb. and whar exec does\r\n        return CustomerModel.findOneAndUpdate({id : customer.Id}, customer).exec();\r\n    },\r\n\r\n    removeCustomer(customer){\r\n        customer.remove();\r\n    },\r\n\r\n    findCustomerById(id) {\r\n        // return new Promise((resolve, reject) => {\r\n        //     CustomerModel.findOne({Id: id}, (err, customer) => {\r\n        //         if (err) reject(err);\r\n        //         else resolve(customer);\r\n        //     });\r\n        // });\r\n        return new Promise((resolve, reject) => {\r\n            CustomerModel.findOne({id : id}).populate('clubs')\r\n            .then(customer => resolve(customer))\r\n            .catch(err => reject(err));\r\n        });\r\n    },\r\n     findCustomerByObjectId(id) {\r\n        return new Promise((resolve, reject) => {\r\n            CustomerModel.findOne({_id: id}, (err, customer) => {\r\n                if (err) reject(err);\r\n                else resolve(customer);\r\n            });\r\n        });\r\n    },\r\n    findCustomerByEmail(email) {\r\n        return new Promise((resolve, reject) => {\r\n            CustomerModel.findOne({email: email}, (err, customer) => {\r\n                if(err) reject(err);\r\n                else resolve(customer);\r\n            });\r\n        });\r\n    },\r\n    removeClubById(customer, clubId){\r\n        var index;\r\n        var i =0;\r\n        index = customer.clubs.indexOf(clubId);\r\n        customer.Clubs.splice(index, 1);\r\n        customer.save();\r\n    },\r\n    changePrivateInfo(custId, index, newItem)\r\n    {\r\n        this.findCustomerById(custId)\r\n        .then(customer => {\r\n            if(customer)\r\n            {\r\n                customer[index] = newItem;\r\n                customer.save();\r\n            }\r\n            else { console.log(\"Customer not found\"); }\r\n        })\r\n        .catch(err => { console.log(err); });\r\n     },\r\n     addCreditOrReceipt(customerId, item, prop)\r\n     {\r\n         this.findCustomerById(customerId)\r\n         .then(customer => {\r\n             if(customer)\r\n             {\r\n                let exists = this.findCreditOrReceipt(customer, item.id, prop); //customer.Credits.find(isCreditExists => isCreditExists.Id == credit.Id);\r\n                if(!exists)\r\n                {\r\n                    customer[prop].push(item);\r\n                    customer.save();\r\n                }\r\n                else { console.log(\"Credit is exists\"); }\r\n             }\r\n         })\r\n         .catch(err => { console.log(err); });\r\n     },\r\n     removeCreditOrReceipt(customerId, creditId, prop)\r\n     {\r\n         this.findCustomerById(customerId)\r\n         .then(customer => {\r\n             if(customer)\r\n             {\r\n                let index = this.getIndexOfCreditOrReceipt(customer, creditId, prop)\r\n                customer[prop].splice(index, 1);\r\n                customer.save();\r\n             }\r\n             else { console.log(\"Customer wasnt found\"); }\r\n         })\r\n         .catch(err => { console.log(err); });\r\n     },\r\n     findCreditOrReceipt(customer, creditId, prop)\r\n     {\r\n        return customer[prop].find(credit => credit.id == creditId);\r\n     },\r\n     getIndexOfCreditOrReceipt(customer, creditId, prop)\r\n     {\r\n        let index =0;\r\n        let i = 0;\r\n        customer[prop].forEach(function(credit) {\r\n            if(credit.id == creditId)\r\n                index = i;\r\n            i++;\r\n        });\r\n        return index;\r\n     },\r\n     changeCreditOrReceiptInfo(customerId, creditId, itemIndex, newItem, prop)\r\n     {\r\n        this.findCustomerById(customerId)\r\n        .then(customer => {\r\n            if(customer)\r\n            {\r\n                let credit = this.findCreditOrReceipt(customer, creditId, prop)\r\n                if(credit){\r\n                    credit[itemIndex] = newItem;\r\n                    customer.save();\r\n                }\r\n                else{\r\n                    console.log(\"Credit wasnt found\");\r\n                }\r\n\r\n            }\r\n            else { console.log(\"Customer not found\"); }\r\n        })\r\n        .catch(err => { console.log(err); });\r\n     },\r\n    addItemCreditOrReceipt(customerId, creditId, newItem, prop)\r\n     {\r\n        this.findCustomerById(customerId)\r\n        .then(customer => {\r\n            if(customer)\r\n            {\r\n                let credit = this.findCreditOrReceipt(customer, creditId, prop)\r\n                if(credit){\r\n                    credit.items.push(newItem);\r\n                    customer.save();\r\n                }\r\n                else{\r\n                    console.log(\"Credit wasnt found\");\r\n                }\r\n\r\n            }\r\n            else { console.log(\"Customer not found\"); }\r\n        })\r\n        .catch(err => { console.log(err); });\r\n     },\r\n     changeItemsCreditOrReceipt(customerId, creditId, newItem, oldItem, prop)\r\n     {\r\n        this.findCustomerById(customerId)\r\n        .then(customer => {\r\n            if(customer)\r\n            {\r\n                let i = this.getIndexOfCreditOrReceipt(customer, creditId, prop);\r\n                let credit = this.findCreditOrReceipt(customer, creditId, prop)\r\n                if(credit != -1){\r\n                    let index = credit.items.indexOf(oldItem);\r\n                    // customer.Credits[i].items[index] = newItem;\r\n                    customer.Credits[i].items.splice(index, 1);\r\n                    customer.Credits[i].items.push(newItem);\r\n                    customer.save();\r\n                }\r\n                else { console.log(\"Credit wasnt found\"); }\r\n            }\r\n            else { console.log(\"Customer not found\"); }\r\n        })\r\n        .catch(err => { console.log(err); });\r\n     },\r\n     removeItemsCreditOrReceipt(customerId, creditId, oldItem, prop)\r\n     {\r\n        this.findCustomerById(customerId)\r\n        .then(customer => {\r\n            if(customer)\r\n            {\r\n                let i = this.getIndexOfCreditOrReceipt(customer, creditId, prop);\r\n                let credit = this.findCreditOrReceipt(customer, creditId, prop)\r\n                if(credit){\r\n                    let index = credit.items.indexOf(oldItem);\r\n                    customer[prop][i].items.splice(index, 1);\r\n                    customer.save();\r\n                }\r\n                else{ console.log(\"Credit wasnt found\"); }\r\n            }\r\n            else { console.log(\"Customer not found\"); }\r\n        })\r\n        .catch(err => { console.log(err); });\r\n     }\r\n}\r\n"]}